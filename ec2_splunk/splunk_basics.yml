- name: Wait for 2 mins before starting deployment
  hosts: localhost
  tasks:
    - name: Pause for 200 seconds
      ansible.builtin.pause:
        seconds: 200

- name: Set Hostname, Servername, Default-Hostname and Banner
  hosts: splunk
  become: true

  vars:
    splunk_bin_path: /opt/splunk/bin/splunk
    splunk_etc_path: /opt/splunk/etc
    banner_name: "{{ inventory_hostname }}"   # You can customize this message

  tasks:
    - name: Set Linux Hostname
      command: hostnamectl set-hostname {{ inventory_hostname }}

    - name: Wait for Splunk service to be running
      shell: |
        sudo -u splunk /opt/splunk/bin/splunk status
      register: splunk_service
      retries: 15
      delay: 10
      until: "'running' in splunk_service.stdout"
      become: yes
      become_user: root

    - name: Pause for 10 seconds
      ansible.builtin.pause:
        seconds: 10
    
    - name: Wait for Splunk service to be fully running
      shell: sudo -u splunk /opt/splunk/bin/splunk status
      register: splunk_service
      retries: 15
      delay: 10
      until: "'running' in splunk_service.stdout"
      become: yes
      become_user: root

    - name: Set Splunk Servername
      shell: "{{ splunk_bin_path }} set servername {{ inventory_hostname }} -auth admin:admin123 --answer-yes"
      args:
        executable: /bin/bash

    - name: Set Splunk Default-Hostname
      shell: "{{ splunk_bin_path }} set default-hostname {{ inventory_hostname }} -auth admin:admin123 --answer-yes"
      args:
        executable: /bin/bash

    - name: Set Splunk Global Banner
      copy:
        dest: "{{ splunk_etc_path }}/system/local/global-banner.conf"
        content: |
          [BANNER_MESSAGE_SINGLETON]
          global_banner.visible = true
          global_banner.message = "{{ banner_name }}"
          global_banner.background_color = green

    - name: Fix permissions for Splunk folders
      ansible.builtin.shell: |
        chown -R splunk:splunk /opt/splunk/etc /opt/splunk/var
      become: true

    - name: Restart Splunk
      shell: "{{ splunk_bin_path }} restart"
      args:
        executable: /bin/bash
      become_user: splunk

- name: Set Hostname, Servername, Default-Hostname and Banner
  hosts: universal_forwarder
  become: true

  vars:
    splunk_bin_path: /opt/splunkforwarder/bin/splunk

  tasks:
    - name: Set Linux Hostname
      command: hostnamectl set-hostname {{ inventory_hostname }}

    - name: Set Splunk Servername
      shell: "{{ splunk_bin_path }} set servername {{ inventory_hostname }} -auth admin:admin123 --answer-yes"
      args:
        executable: /bin/bash

    - name: Set Splunk Default-Hostname
      shell: "{{ splunk_bin_path }} set default-hostname {{ inventory_hostname }} -auth admin:admin123 --answer-yes"
      args:
        executable: /bin/bash


- name: Enable Receiving on Indexer
  hosts: indexer
  become: yes
  become_user: splunk
  tasks:
    - name: Enable listening on port 9997 for indexer
      shell: /opt/splunk/bin/splunk enable listen 9997 -auth admin:admin123
      register: listen_output
      failed_when: "'already' not in listen_output.stdout and listen_output.rc != 0"

    
    - name: Create service user on Indexer
      shell: |
        /opt/splunk/bin/splunk add user Splunk_service_user -role admin -password Softmania123@ -full-name "Splunk Service User" -email "splunk@example.com" -auth admin:admin123
      args:
        executable: /bin/bash

- name: Connect Search Head to Indexer
  hosts: search_head
  become: yes
  become_user: splunk

  tasks:
    - name: Add Indexer as Search Peer from Search Head
      shell: |
        /opt/splunk/bin/splunk add search-server https://{{ hostvars[item]['private_ip'] }}:8089 -auth admin:admin123 -remoteUsername Splunk_service_user -remotePassword Softmania123@
      loop: "{{ groups['indexer'] }}"
      args:
        executable: /bin/bash

- name: Connect Heavy Forwarder to Indexer
  hosts: heavy_forwarder
  become: yes
  become_user: splunk

  vars:
    indexer_ip: "{{ hostvars[groups['indexer'][0]]['private_ip'] }}"

  tasks:
    - name: Enable listening on port 9997 for HF
      shell: /opt/splunk/bin/splunk enable listen 9997 -auth admin:admin123
      register: listen_output
      failed_when: "'already' not in listen_output.stdout and listen_output.rc != 0"

    - name: Ensure local directory exists
      file:
        path: /opt/splunk/etc/system/local
        state: directory
        mode: '0755'

    - name: Create outputs.conf for HF to Indexer
      copy:
        dest: "/opt/splunk/etc/system/local/outputs.conf"
        content: |
          [tcpout]
          defaultGroup = my_indexer

          [tcpout:my_indexer]
          server = {{ indexer_ip }}:9997

    - name: Restart Splunk HF
      shell: "/opt/splunk/bin/splunk restart"
      args:
        executable: /bin/bash


- name: Connect Universal Forwarder to Heavy Forwarder
  hosts: universal_forwarder
  become: yes
  become_user: splunk

  vars:
    heavy_forwarder_ip: "{{ hostvars[groups['heavy_forwarder'][0]]['private_ip'] }}"  # fetch HF IP

  tasks:

    - name: Ensure local directory exists
      file:
        path: /opt/splunkforwarder/etc/system/local
        state: directory
        mode: '0755'

    - name: Create outputs.conf for forwarding to Heavy Forwarder
      copy:
        dest: "/opt/splunkforwarder/etc/system/local/outputs.conf"
        content: |
          [tcpout]
          defaultGroup = my_heavy_forwarder

          [tcpout:my_heavy_forwarder]
          server = {{ heavy_forwarder_ip }}:9997

    - name: Restart Splunk Universal Forwarder
      shell: "/opt/splunkforwarder/bin/splunk restart"
      args:
        executable: /bin/bash
